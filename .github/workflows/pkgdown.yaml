name: conda-pkgdown

on:
  push:
    branches:
      - main

env:
  atoken: ${{ secrets.ANACONDA_UPLOAD_TOKEN }}
  recipe_path: conda/recipe
  env_path: conda/env
  VERSION: '1.2.0' # versioned by bump2version
  GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}

jobs:
  build-conda-deploy-pkgdown:
    # When merging to main and the commit message starts with 'Bump version:'
    if: "startsWith(github.event.head_commit.message, 'Bump version:')"
    name: Build conda package & deploy pkgdown website
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          # Do everything inside the base env
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ""
          mamba-version: "*"
          channels: "umccr,conda-forge,bioconda"
      - name: Conda package build and upload
        run: |
          mamba install conda-build conda-verify anaconda-client boa dvc dvc-gdrive
          dvc pull
          ls -l inst/extdata/*
          conda mambabuild --R 4.1 ${recipe_path} --token ${atoken}
      - name: Install conda packages
        run: mamba env create -n pkgdown -f ${env_path}/pkgdown.yaml
      - name: Publish pkgdown website
        run: |
            git config --local user.email "actions@github.com"
            git config --local user.name "GitHub Actions"
            conda activate pkgdown
            printf "gpgr version:\n"
            Rscript -e "packageVersion('gpgr')"
            Rscript -e "pkgdown::deploy_to_branch(pkg = '.', commit_message = paste(pkgdown:::construct_commit_message('.'), '- see https://umccr.github.io/gpgr/'), branch = 'gh-pages', new_process = FALSE)"

      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            const the_tag_name = 'refs/tags/v' + process.env.VERSION
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: the_tag_name,
              sha: context.sha
            })
